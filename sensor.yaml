

  - platform: netatmo
    modules:
      Regenmesser:
        - sum_rain_1
        - sum_rain_24

  - platform: speedtest
    minute: 10
    hour: 19
    monitored_conditions:
      - ping
      - download
      - upload
  - platform: pi_hole
    host: !secret pihole_localhost
    monitored_conditions:
      - ads_blocked_today
      - dns_queries_today
      - unique_clients

  - platform: systemmonitor
    resources:
    - type: disk_use_percent
      arg: /
    - type: memory_free
    - type: memory_use_percent
    - type: processor_use
    - type: last_boot
    - type: network_in
      arg: eth0
    - type: network_out
      arg: eth0
  - platform: command_line
    name: CPU Temperature
    command: cat /sys/class/thermal/thermal_zone0/temp
    unit_of_measurement: Â°C
    value_template: '{{ value | multiply(0.001) | round(1) }}'
  - platform: cert_expiry
    host: !secret domain
  - platform: moon

  - platform: darksky
    api_key: !secret darksky_apikey
    monitored_conditions:
      - summary
      - icon
      - apparent_temperature
      - wind_speed
      - cloud_cover

############ Da qui in poi tutti i sensori creati tramite template
  - platform: template
    sensors:
#      consumo_:
#        entity_id: sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_2, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_3, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_4, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_5, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_6, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_7, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_8
#        friendly_name: "Cosumi Fibaro RollerShutter"
#        icon_template: mdi:chart-bar
#        unit_of_measurement: 'W'
#        value_template: "{{ states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_2.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_3.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_4.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_5.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_6.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_7.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_8.state | int }} "


      fasilunari:
        friendly_name: "Luna"
        icon_template: >
          {% if is_state('sensor.moon', 'new_moon') %}
            mdi:circle-outline
          {% elif is_state('sensor.moon', 'waxing_crescent') %}
            mdi:arrow-up-bold
          {% elif is_state('sensor.moon', 'first_quarter') %}
            mdi:arrow-up-bold
          {% elif is_state('sensor.moon', 'waxing_gibbous') %}
            mdi:arrow-up-bold
          {% elif is_state('sensor.moon', 'full_moon') %}
            mdi:brightness-1
          {% elif is_state('sensor.moon', 'waning_gibbous') %}
            mdi:arrow-down-bold
          {% elif is_state('sensor.moon', 'last_quarter') %}
            mdi:arrow-down-bold
          {% elif is_state('sensor.moon', 'waning_crescent') %}
            mdi:arrow-down-bold
          {% endif %}
        value_template: >
          {% if is_state('sensor.moon', 'new_moon') %}
            Luna Nuova
          {% elif is_state('sensor.moon', 'waxing_crescent') %}
            Luna Crescente
          {% elif is_state('sensor.moon', 'first_quarter') %}
            Primo Quarto
          {% elif is_state('sensor.moon', 'waxing_gibbous') %}
            Gibbosa Crescente
          {% elif is_state('sensor.moon', 'full_moon') %}
            Luna Piena
          {% elif is_state('sensor.moon', 'waning_gibbous') %}
            Gibbosa Calante
          {% elif is_state('sensor.moon', 'last_quarter') %}
            Ultimo Quarto
          {% elif is_state('sensor.moon', 'waning_crescent') %}
            Luna Calante
          {% endif %}


  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
      - 'time_date'
      - 'time_utc'

  - platform: miflora
    mac: 'C4:7C:8D:65:F1:26'
    name: Flower 1
    force_update: false
    median: 3
    monitored_conditions:
      - moisture
      - light
      - temperature
      - conductivity
      - battery


  - platform: netatmo
    modules:
      Regenmesser:
        - rain
        - sum_rain_1
        - sum_rain_24

  - platform: pi_hole
    host: !secret pihole_localhost
    monitored_conditions:
      - ads_blocked_today
      - dns_queries_today
      - unique_clients

  - platform: systemmonitor
    resources:
    - type: disk_use_percent
      arg: /
    - type: memory_free
    - type: memory_use_percent
    - type: processor_use
    - type: last_boot

  - platform: uptime
    name: HomeAssistant attivo da

#  - platform: command_line # funziona solo su Raspberry
#    name: CPU Temperature
#    command: cat /sys/class/thermal/thermal_zone0/temp
#    unit_of_measurement: Â°C
#    value_template: '{{ value | multiply(0.001) | round(1) }}'
  - platform: cert_expiry
    host: !secret ddomain
  - platform: moon

  - platform: darksky
    api_key: !secret darksky_apikey
    forecast:
      - 0
    language: it
    monitored_conditions:
      - summary
      - icon
      - temperature_high
      - apparent_temperature
      - wind_speed
      - cloud_cover
      - precip_intensity

  - platform: history_stats
    name: Ore alla TV
    entity_id: media_player.lg_tv_remote
    state: 'playing'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

############ Da qui in poi tutti i sensori creati tramite template
  - platform: template
    sensors:
#      consumototale:
#        entity_id: sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_2, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_3, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_4, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_5, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_6, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_7, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_8, sensor.neo_coolcam_power_plug_12a_power, sensor.neo_coolcam_power_plug_12a_power_2, sensor.neo_coolcam_power_plug_12a_power_10, sensor.neo_coolcam_power_plug_12a_power_11, sensor.neo_coolcam_power_plug_12a_power_8, sensor.neo_coolcam_power_plug_12a_power_3, sensor.fibaro_system_fgd212_dimmer_2_power_2, sensor.neo_coolcam_power_plug_12a_power_7, sensor.fibaro_system_fgd212_dimmer_2_power_4, sensor.fibaro_system_fgd212_dimmer_2_power, sensor.fibaro_system_fgd212_dimmer_2_power_3
#        friendly_name: "Cosumi Quasi Generali"
#        icon_template: mdi:chart-bar
#        unit_of_measurement: 'W'
#        value_template: "{{ states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_2.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_3.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_4.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_5.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_6.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_7.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_8.state | int + states.sensor.neo_coolcam_power_plug_12a_power.state | int + states.sensor.neo_coolcam_power_plug_12a_power_2.state | int + states.sensor.neo_coolcam_power_plug_12a_power_10.state | int + states.sensor.neo_coolcam_power_plug_12a_power_11.state | int + states.sensor.neo_coolcam_power_plug_12a_power_8.state | int + states.sensor.neo_coolcam_power_plug_12a_power_3.state | int + states.sensor.fibaro_system_fgd212_dimmer_2_power_2.state | int + states.sensor.neo_coolcam_power_plug_12a_power_7.state | int + states.sensor.fibaro_system_fgd212_dimmer_2_power_4.state | int + states.sensor.fibaro_system_fgd212_dimmer_2_power.state | int + states.sensor.fibaro_system_fgd212_dimmer_2_power_3.state | int }} "

#      consumoroller:
#        entity_id: sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_2, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_3, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_4, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_5, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_6, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_7, sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_8
#        friendly_name: "Cosumi Rotolanti"
#        icon_template: mdi:chart-bar
#        unit_of_measurement: 'W'
#        value_template: "{{ states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_2.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_3.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_4.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_5.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_6.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_7.state | int + states.sensor.fibaro_system_fgrm222_roller_shutter_controller_2_power_8.state | int }} "

      giornianatale:
        friendly_name: 'Giorni al Natale'
        value_template: '{{ (( as_timestamp(strptime("25.12."+ now().strftime("%Y"), "%d.%m.%Y")) - as_timestamp(strptime(now().strftime("%d")+"."+now().strftime("%m")+"."+now().strftime("%Y"), "%d.%m.%Y"))) / 86400 ) | round(0) }}' #'{{ (( as_timestamp(now()) - as_timestamp(strptime("25.12."+now().strftime("%Y"), "%d.%m.%Y")) ) / 86400 ) | round(0) }}'
        unit_of_measurement: "Giorni"
        entity_id: sensor.date
        icon_template: mdi:calendar

      fasilunari:
        friendly_name: "Luna"
        icon_template: >
          {% if is_state('sensor.moon', 'new_moon') %}
            mdi:circle-outline
          {% elif is_state('sensor.moon', 'waxing_crescent') %}
            mdi:arrow-up-bold
          {% elif is_state('sensor.moon', 'first_quarter') %}
            mdi:arrow-up-bold
          {% elif is_state('sensor.moon', 'waxing_gibbous') %}
            mdi:arrow-up-bold
          {% elif is_state('sensor.moon', 'full_moon') %}
            mdi:brightness-1
          {% elif is_state('sensor.moon', 'waning_gibbous') %}
            mdi:arrow-down-bold
          {% elif is_state('sensor.moon', 'last_quarter') %}
            mdi:arrow-down-bold
          {% elif is_state('sensor.moon', 'waning_crescent') %}
            mdi:arrow-down-bold
          {% endif %}
        value_template: >
          {% if is_state('sensor.moon', 'new_moon') %}
            Luna Nuova
          {% elif is_state('sensor.moon', 'waxing_crescent') %}
            Luna Crescente
          {% elif is_state('sensor.moon', 'first_quarter') %}
            Primo Quarto
          {% elif is_state('sensor.moon', 'waxing_gibbous') %}
            Gibbosa Crescente
          {% elif is_state('sensor.moon', 'full_moon') %}
            Luna Piena
          {% elif is_state('sensor.moon', 'waning_gibbous') %}
            Gibbosa Calante
          {% elif is_state('sensor.moon', 'last_quarter') %}
            Ultimo Quarto
          {% elif is_state('sensor.moon', 'waning_crescent') %}
            Luna Calante
          {% endif %}

###### SONOS ######
  - alias: Test Sonos
    initial_state: False
    trigger:
      platform: state
      entity_id: automation.test_sonos
      to: 'on'
    action:
      - service: media_player.select_source
        data:
          entity_id: media_player.salotto
          source: Lancia Flow



##### METEO #################

  - alias: Pioggia
    trigger:
      platform: numeric_state
      entity_id: sensor.netatmo_regenmesser_sum_rain_1
      above: 0.2
    condition:
      condition: and
      conditions:
        # Solo una volta all'ora
        - condition: template
          value_template: >
            {% if states.automation.pioggia.last_triggered is not none %}
              {% if as_timestamp(now()) | int - as_timestamp(states.automation.pioggia.attributes.last_triggered) | int > 3600 %} true {% else %} false
              {% endif %}
            {% else %}
            false
            {% endif %}
        # Solo se la posizione di entrambe le finestre non è già semibassa
        - condition: template
          value_template: '{{ (states.cover.level_2.attributes.current_position > 20) and (states.cover.level_3.attributes.current_position > 20) }}'
    action:
      - service: notify.telefoni
        data:
          message: "Piove...! Chiudo le finestre che posso chiudere, per le altre organizzati!"
      - service: script.pioggia

########## ILLUMINAZIONE ###################


#####Luce Camerina
  - alias: Camerina out # dopo 5 minuti di assenza imposta la luminosità al minimo
    trigger:
      platform: state
      entity_id: binary_sensor.sensor
      to: 'off'
      for:
        minutes: 4
    condition:
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
      - condition: state
        entity_id: light.level_2
        state: 'on'
    action:
      - service: light.turn_on
        data:
          entity_id: light.level_2
          brightness: 3
      - service: automation.turn_on
        entity_id: automation.camerina_return
  - alias: Camerina return # se rientro nella stanza reimposta la luminosità al 50%
    initial_state: False
    trigger:
      platform: state
      entity_id: binary_sensor.sensor
      to: 'on'
    action:
      - service: light.turn_on
        data:
          entity_id: light.level_2
          brightness_pct: 50
      - service: automation.turn_off
        entity_id: automation.camerina_return
  - alias: Camerina out out # se dopo 15 minuti non sono rientrato spengi la luce e disattiva la riaccensione automatica
    trigger:
      platform: state
      entity_id: binary_sensor.sensor
      to: 'off'
      for:
        minutes: 15
    condition:
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
      - condition: state
        entity_id: light.level_2
        state: 'on'
    action:
      - service: light.turn_off
        data:
          entity_id: light.level_2
      - service: automation.turn_off
        entity_id: automation.camerina_return
  - alias: Camerina out day #di giorno spengi dopo 6 minuti
    trigger:
      platform: state
      entity_id: binary_sensor.sensor
      to: 'off'
      for:
        minutes: 6
    condition:
      - condition: state
        entity_id: sun.sun
        state: "above_horizon"
    action:
      service: light.turn_off
      data:
        entity_id: light.level_2

########## Luce studio
  - alias: Bagno Sera
    trigger:
      platform: state
      entity_id: light.studio
      to: 'on'
    condition:
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
      - condition: time
        after: '18:00:00'
        before: '23:59:59'
    action:
      service: light.turn_on
      data:
        entity_id: light.studio
        brightness_pct: 10
        transition: 5

########## Luce Bagno Grande
  - alias: Bagno Sera
    trigger:
      platform: state
      entity_id: light.level
      from: 'off'
      to: 'on'
    condition:
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
      - condition: time
        after: '18:00:00'
        before: '23:59:59'
    action:
      service: light.turn_on
      data:
        entity_id: light.level
        brightness_pct: 15

  - alias: Bagno Notte
    trigger:
      platform: state
      entity_id: light.level
      from: 'off'
      to: 'on'
    condition:
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
      - condition: time
        after: '00:00:01'
        before: '07:00:00'
    action:
      service: light.turn_on
      data:
        entity_id: light.level
        brightness_pct: 3


########## Luce Philips
  - alias: Guardo la TV
    trigger:
      platform: state
      entity_id: media_player.lg_tv_remote
      to: 'playing'
    condition:
      condition: state
      entity_id: sun.sun
      state: "below_horizon"
    action:
      service: switch.turn_on
      entity_id: switch.switch_15
  - alias: Philips Energy
    trigger:
      platform: time
      at:  '1:40:00'
    condition:
      - condition: state
        entity_id: switch.switch_15
        state: 'on'
      - condition: state
        entity_id: media_player.lg_tv_remote
        state: 'off'
    action:
      service: switch.turn_off
      entity_id: switch.switch_15

#  - alias: Pulsante Philips
#    trigger:
#      platform: state
#      entity_id: zwave.neo_coolcam_power_plug_12a_5
#      to: ''
#    action:
#      service: switch.toggle
#      entity_id: switch.switch_15

############## AUTOMAZIONI DI SERVIZIO #################

  - alias: Start HomeKit
    trigger:
      - platform: event
        event_type: zwave.network_ready
    action:
      - delay: '00:01:00'
      - service: homekit.start


  - alias: Backup Automatico
    trigger:
      platform: time
      at: '3:00:00'
    condition:
      - condition: time
        weekday:
          - mon
    action:
      - service: hassio.snapshot_full
        data_template:
          name: Automated Backup {{ now().strftime('%Y-%m-%d') }}


########### NOTIFICHE ##########
  - alias: Attiva Notifica lavatrice
    trigger:
    - platform: numeric_state
      entity_id: sensor.neo_coolcam_power_plug_12a_power_8
      above: '50'
    action:
      - service: automation.turn_on
        entity_id: automation.notifica_fine_lavaggio

  - alias: Notifica fine lavaggio
    initial_state: False
    trigger:
    - platform: numeric_state
      entity_id: sensor.neo_coolcam_power_plug_12a_power_8
      below: '3'
      for:
        minutes: 8
    action:
      - service: notify.ios_davides_iphone
        data:
          message: "La lavatrice ha completato il lavaggio"
      - service: notify.firetv
        data:
          message: "La lavatrice ha completato il lavaggio"
      - service: notify.ios_iphone_di_muriel
        data:
          message: "Vedi che il marito NERD può essere utile ?!! La LAVATRICE è Pronta"
      - service: automation.turn_off
        entity_id: automation.notifica_fine_lavaggio

  - alias: Notifica aggiornamento
    trigger:
    - platform: state
      entity_id: updater.updater
    action:
      service: notify.ios_davides_iphone
      data_template:
        message: "È disponibile Home Assistant {{ states.updater.updater.state }}."


  - alias: Spazio Libero
    trigger:
      platform: numeric_state
      entity_id: sensor.disk_use_percent_
      above: 85
      below: 90
    action:
      - service: notify.ios_davides_iphone
        data:
          message: "Spazio libero sulla SD in esaurimento!"
      - service: automation.turn_off
        data:
          entity_id: automation.backup_automatico
      - service: notify.ios_davides_iphone
        data:
          message: "Backup Automatico disattivato"

  - alias: Toner
    trigger:
      platform: numeric_state
      entity_id: sensor.samsung_m2020_series_1921681137_toner_black
      below: 10
    action:
      - service: notify.telefoni
        data:
          message: "È quasi finito il toner della stampante Samsung M2020, ricordati di comprarlo"


  - alias: Test Notifica
    initial_state: False
    trigger:
      platform: state
      entity_id: automation.test_notifica
      to: 'on'
    action:
      - service: notify.firetv
        data:
          title: "TEST"
          message: "Test Notifica"
      - service: notify.ios_davides_iphone
        data:
          message: "Test Notifica iOS"

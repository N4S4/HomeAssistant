############ WEBHOOK ##########
  - alias: webhook_cancello
    initial_state: true
    trigger:
      platform: webhook
      webhook_id: cancello_pedonale
    action:
      - service: switch.toggle
        data:
          entity_id: switch.fibaro_system_fgs222_double_relay_switch_2x15kw_switch

###### SONOS ######
  - alias: test sonos
    initial_state: False
    trigger:
      platform: state
      entity_id: automation.test_sonos
      to: 'on'
    action:
      - service: media_player.select_source
        data:
          entity_id: media_player.salotto
          source: Lancia Flow


##### METEO #################

  - alias: pioggia
    initial_state: true
    trigger:
      platform: numeric_state
      entity_id: sensor.netatmo_regenmesser_sum_rain_1
      above: 0.1
    condition:
      condition: and
      conditions:
        # Solo una volta all'ora
        - condition: template
          value_template: >
            {% if states.automation.pioggia.last_triggered is not none %}
              {% if as_timestamp(now()) | int - as_timestamp(states.automation.pioggia.attributes.last_triggered) | int > 3600 %} true {% else %} false
              {% endif %}
            {% else %}
            false
            {% endif %}
        # Solo se la posizione di entrambe le finestre non è già semibassa
        - condition: template
          value_template: '{{ (states.cover.level_2.attributes.current_position > 20) and (states.cover.level_3.attributes.current_position > 20) }}'
    action:
      - service: notify.telefoni
        data:
          message: "Piove...! Chiudo le finestre che posso chiudere, per le altre organizzati!"
      - service: script.pioggia

####################################################
################## ILLUMINAZIONE ###################
####################################################

####################  Luce Camerina
  - alias: camerina out # dopo 5 minuti di assenza imposta la luminosità al minimo
    initial_state: true
    trigger:
      platform: state
      entity_id: binary_sensor.sensor
      to: 'off'
      for:
        minutes: 4
    condition:
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
      - condition: state
        entity_id: light.level_2
        state: 'on'
    action:
      - service: light.turn_on
        data:
          entity_id: light.level_2
          brightness: 3
      - service: automation.turn_on
        entity_id: automation.camerina_return
  - alias: Camerina return # se rientro nella stanza reimposta la luminosità al 50%
    initial_state: False
    trigger:
      platform: state
      entity_id: binary_sensor.sensor
      to: 'on'
    action:
      - service: light.turn_on
        data:
          entity_id: light.level_2
          brightness_pct: 50
      - service: automation.turn_off
        entity_id: automation.camerina_return
  - alias: camerina out out # se dopo 15 minuti non sono rientrato spengi la luce e disattiva la riaccensione automatica
    initial_state: true
    trigger:
      platform: state
      entity_id: binary_sensor.sensor
      to: 'off'
      for:
        minutes: 15
    condition:
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
      - condition: state
        entity_id: light.level_2
        state: 'on'
    action:
      - service: light.turn_off
        data:
          entity_id: light.level_2
      - service: automation.turn_off
        entity_id: automation.camerina_return
  - alias: camerina out day #di giorno spengi dopo 6 minuti
    initial_state: true
    trigger:
      platform: state
      entity_id: binary_sensor.sensor
      to: 'off'
      for:
        minutes: 6
    condition:
      - condition: state
        entity_id: sun.sun
        state: "above_horizon"
    action:
      service: light.turn_off
      data:
        entity_id: light.level_2

########## Luce studio
  - alias: studio Sera
    initial_state: true
    trigger:
      - platform: state
        entity_id: light.studio
        to: 'on'
    condition:
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
      - condition: time
        after: '18:00:00'
        before: '23:59:59'
    action:
      service: light.turn_on
      data:
        entity_id: light.studio
        brightness_pct: 10
        transition: 5

########## Luce Bagno Grande ##############
  - alias: bagno pir
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.fibaro_system_fgms001zw5_motion_sensor_sensor
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.sensor
          state: 'off'
          for: # solo se è stato spento nell'ultimo minuto il sensore dela camerina
            minutes: 1
        - condition: state
          entity_id: sun.sun
          state: "below_horizon"
    action:
      service: light.turn_on
      data:
        entity_id: light.level

  - alias: bagno sera
    initial_state: true
    trigger:
      - platform: state
        entity_id: light.level
        from: 'off'
        to: 'on'
    condition:
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
      - condition: time
        after: '18:00:00'
        before: '23:59:59'
    action:
      service: light.turn_on
      data:
        entity_id: light.level
        brightness_pct: 10

  - alias: bagno notte
    initial_state: true
    trigger:
      platform: state
      entity_id: light.level
      from: 'off'
      to: 'on'
    condition:
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
      - condition: time
        after: '00:00:01'
        before: '07:00:00'
    action:
      service: light.turn_on
      data:
        entity_id: light.level
        brightness_pct: 3

  - alias: bagno energy
    initial_state: true
    trigger:
      platform: state
      entity_id: binary_sensor.fibaro_system_fgms001zw5_motion_sensor_sensor
      to: 'off'
      for:
        minutes: 1
    action:
      service: light.turn_off
      data:
        entity_id: light.level

########## Luce Philips ######
  - alias: guardo la tv
    initial_state: true
    trigger:
      platform: state
      entity_id: media_player.lg_tv_remote
      to: 'playing'
    condition:
      condition: state
      entity_id: sun.sun
      state: "below_horizon"
    action:
      service: switch.turn_on
      entity_id: switch.switch_15
  - alias: Philips Energy
    initial_state: true
    trigger:
      platform: time
      at:  '1:00:00'
    condition:
      - condition: state
        entity_id: switch.switch_15
        state: 'on'
      - condition: state
        entity_id: media_player.lg_tv_remote
        state: 'off'
    action:
      service: switch.turn_off
      entity_id: switch.switch_15

############ Tutte le Luci #######

  - alias: risparmio energetico giorno
    initial_state: true
    trigger:
      platform: state
      entity_id: group.persone  # di default quando un membro del gruppo è a casa, il gruppo è a casa
      from: 'home'
      to: 'not_home'
      for:
        minutes: 10
    condition:
      - condition: state
        entity_id: sun.sun
        state: "above_horizon"
    action:
      service: homeassistant.turn_off
      entity_id: group.luci

############ Simulatore presenza  ######################
  - alias: assente
    initial_state: true
    trigger:
      platform: time_pattern
      minutes: '/1'
      seconds: 0
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ not is_state("device_tracker.davides_iphone", "home") and not is_state("device_tracker.iphone_di_muriel", "home") }}'
        - condition: sun
          after: sunset
          after_offset: "-00:25:00"
        - condition: state
          entity_id: switch.fibaro_system_fgs222_double_relay_switch_2x15kw_switch_2
          state: 'off'
    action:
      - service: homeassistant.turn_on
        entity_id: switch.fibaro_system_fgs222_double_relay_switch_2x15kw_switch_2

########################################################
############## AUTOMAZIONI DI SERVIZIO #################
########################################################
  - alias: start homekit
    initial_state: true
    trigger:
      - platform: event
        event_type: zwave.network_ready
      - platform: event
        event_type: zwave.network_complete
      - platform: event
        event_type: zwave.network_complete_some_dead
#      - platform: homeassistant
#        event: start
    action:
      - delay: '00:01:00'
      - service: homekit.start


  - alias: backup automatico
    initial_state: true
    trigger:
      platform: time
      at: '3:00:00'
    condition:
      - condition: time
        weekday:
          - mon
    action:
      - service: hassio.snapshot_full
        data_template:
          name: Automated Backup {{ now().strftime('%Y-%m-%d') }}
      - service: hassio.addon_stdin
        data:
          addon: 7be23ff5_dropbox_sync
          input:
            command: upload

########### NOTIFICHE ##########
  - alias: attiva notifica lavatrice
    initial_state: true
    trigger:
    - platform: numeric_state
      entity_id: sensor.neo_coolcam_power_plug_12a_power_8
      above: '50'
    action:
      - service: automation.turn_on
        entity_id: automation.notifica_fine_lavaggio
  - alias: notifica fine lavaggio
    initial_state: false
    trigger:
    - platform: numeric_state
      entity_id: sensor.neo_coolcam_power_plug_12a_power_8
      below: '3'
      for:
        minutes: 8
    action:
      - service: notify.ios_davides_iphone
        data:
          message: "La lavatrice ha completato il lavaggio"
      - service: notify.firetv
        data:
          message: "La lavatrice ha completato il lavaggio"
      - service: notify.ios_iphone_di_muriel
        data:
          message: "Vedi che il marito NERD può essere utile ?!! La LAVATRICE è Pronta"
      - service: automation.turn_off
        entity_id: automation.notifica_fine_lavaggio

  - alias: attiva notifica asciugatrice
    initial_state: true
    trigger:
    - platform: numeric_state
      entity_id: sensor.neo_coolcam_power_plug_12a_power_11
      above: '50'
    action:
      - service: automation.turn_on
        entity_id: automation.notifica_asciugatrice
  - alias:  notifica asciugatrice
    initial_state: false
    trigger:
    - platform: numeric_state
      entity_id: sensor.neo_coolcam_power_plug_12a_power_11
      below: '3'
      for:
        minutes: 8
    action:
      - service: notify.telefoni
        data:
          message: "Asciugatrice pronta: vediamo di non farci marcire i vestiti dentro ... "
      - service: automation.turn_off
        entity_id: automation.notifica_asciugatrice

  - alias: notifica aggiornamento
    initial_state: true
    trigger:
    - platform: state
      entity_id: updater.updater
    action:
      service: notify.ios_davides_iphone
      data_template:
        message: "È disponibile Home Assistant {{ states.updater.updater.state }}."

  - alias: arrivabetty
    initial_state: True
    trigger:
      platform: state
      entity_id: device_tracker.suocera
      to: 'home'
    condition:
      - condition: template   # Solo una volta ogni 24 ore
        value_template: >
          {% if states.automation.arrivabetty.last_triggered is not none %}
          {% if as_timestamp(now()) | int - as_timestamp(states.automation.arrivabetty.attributes.last_triggered) | int > 86400 %} true {% else %} false
          {% endif %}
          {% else %}
          false
          {% endif %}
    action:
      - service: notify.ios_davides_iphone
        data:
          message: " La vecchia pazza è alla porta.... SCAPPA ! "
      - service: media_player.volume_set
        data:
          entity_id: media_player.living
          volume_level: 0.60
      - service: tts.google_say
        entity_id: media_player.living
        data:
          message: 'Chiudete a chiave il mobile dei liquori, nascondete gli oggetti che si rompono... salvate il salvabile. E buona fortuna la vecchia è arrivata '
          language: 'it'


  - alias: spazio libero
    initial_state: true
    trigger:
      platform: numeric_state
      entity_id: sensor.disk_use_percent
      above: 85
      below: 90
    action:
      - service: notify.ios_davides_iphone
        data:
          message: "Spazio libero sulla SD in esaurimento!"
      - service: automation.turn_off
        data:
          entity_id: automation.backup_automatico
      - service: notify.ios_davides_iphone
        data:
          message: "Backup Automatico disattivato"

  - alias: toner
    initial_state: true
    trigger:
      platform: numeric_state
      entity_id: sensor.samsung_m2020_series_1921681137_toner_black
      below: 10
    action:
      - service: notify.telefoni
        data:
          message: "È quasi finito il toner della stampante Samsung M2020, ricordati di comprarlo"


  - alias: test notifica
    initial_state: False
    trigger:
      platform: state
      entity_id: automation.test_notifica
      to: 'on'
    action:
      - service: notify.firetv
        data:
          title: "TEST"
          message: "Test Notifica"
      - service: notify.ios_davides_iphone
        data:
          message: "Test Notifica iOS"

##################-----CONTROLLO CARICHI----##################################
#
#  alla fine l'ho messo in un packages per conto suo
#

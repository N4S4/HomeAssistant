############ WEBHOOK ##########
  - alias: webhook_cancello
    initial_state: true
    trigger:
      platform: webhook
      webhook_id: cancello_pedonale
    action:
      - service: switch.toggle
        data:
          entity_id: switch.fibaro_system_fgs222_double_relay_switch_2x15kw_switch

  - alias: webhook_cancelloauto
    initial_state: true
    trigger:
      platform: webhook
      webhook_id: cancello_auto
    action:
      - service: switch.toggle
        data:
          entity_id:  switch.switch

###### SONOS ######
  - alias: test sonos
    initial_state: False
    trigger:
      platform: state
      entity_id: automation.test_sonos
      to: 'on'
    action:
      - service: media_player.select_source
        data:
          entity_id: media_player.salotto
          source: Lancia Flow

  - alias: atmosfera
    initial_state: True
    trigger:
      platform: state
      entity_id: input_boolean.atmosfera
      to: 'on'
    action:
      - service: media_player.select_source
        data:
          entity_id: media_player.salotto
          source: Tutte le belle canzoni di Natale
      - service: media_player.volume_set
        data:
          entity_id: media_player.salotto
          volume_level: 0.17
      - delay: 0:01
      - service: homeassistant.turn_off
        data:
          entity_id: input_boolean.atmosfera

####################################################
################## FINESTRE ###################
####################################################

  - alias: Sveglia di luce
    initial_state: True
    trigger:
      platform: time_pattern
      minutes: '/1'
      seconds: 0
    condition:
      condition: template
      value_template: >
        {% if is_state('binary_sensor.workday_sensor', 'on') and now().strftime("%H:%M:00") == states.input_datetime.fenestre_feriali.state %}
        true
        {% elif is_state('binary_sensor.workday_sensor', 'off') and now().strftime("%H:%M:00") == states.input_datetime.finestre_festivi.state %}
        true
        {% else %}
        false
        {% endif %}
    action:
      - service: cover.set_cover_position
        data:
          entity_id: cover.level_3 #camera
          position: 60
      - delay: '00:09:00'
      - service: cover.set_cover_position
        data:
          entity_id: cover.level_3 #camera
          position: 80

  - alias: pioggia
    initial_state: true
    trigger:
      platform: numeric_state
      entity_id: sensor.smartweather_rain_today   # sensore netatmo rinominato
      above: 0.1
    condition:
      condition: and
      conditions:
        # Solo una volta all'ora
        - condition: template
          value_template: >
            {% if states.automation.pioggia.last_triggered is not none %}
              {% if as_timestamp(now()) | int - as_timestamp(states.automation.pioggia.attributes.last_triggered) | int > 3600 %} true {% else %} false
              {% endif %}
            {% else %}
            false
            {% endif %}
        # Solo se la posizione di entrambe le finestre non è già semibassa
        - condition: template
          value_template: '{{ (states.cover.level_2.attributes.current_position > 20) and (states.cover.level_3.attributes.current_position > 20) }}'
    action:
      - service: script.pioggia
      - service: notify.telefoni
        data:
          message: "Piove...! Chiudo le finestre che posso chiudere, per le altre organizzati!"

####################################################
################## ILLUMINAZIONE ###################
####################################################

####################  Luce Camerina
  - alias: camerina out # dopo 5 minuti di assenza imposta la luminosità al minimo
    initial_state: true
    trigger:
      platform: state
      entity_id: binary_sensor.sensor
      to: 'off'
      for:
        minutes: 4
    condition:
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
      - condition: state
        entity_id: light.level_2
        state: 'on'
    action:
      - service: light.turn_on
        data:
          entity_id: light.level_2
          brightness: 3
      - service: automation.turn_on
        entity_id: automation.camerina_return
  - alias: Camerina return # se rientro nella stanza reimposta la luminosità al 50%
    initial_state: False
    trigger:
      platform: state
      entity_id: binary_sensor.sensor
      to: 'on'
    action:
      - service: light.turn_on
        data:
          entity_id: light.level_2
          brightness_pct: 50
      - service: automation.turn_off
        entity_id: automation.camerina_return
  - alias: camerina out out # se dopo 15 minuti non sono rientrato spengi la luce e disattiva la riaccensione automatica
    initial_state: true
    trigger:
      platform: state
      entity_id: binary_sensor.sensor
      to: 'off'
      for:
        minutes: 15
    condition:
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
      - condition: state
        entity_id: light.level_2
        state: 'on'
    action:
      - service: light.turn_off
        data:
          entity_id: light.level_2
      - service: automation.turn_off
        entity_id: automation.camerina_return
  - alias: camerina out day #di giorno spengi dopo 6 minuti
    initial_state: true
    trigger:
      platform: state
      entity_id: binary_sensor.sensor
      to: 'off'
      for:
        minutes: 6
    condition:
      - condition: state
        entity_id: sun.sun
        state: "above_horizon"
    action:
      service: light.turn_off
      data:
        entity_id: light.level_2

########## Luce studio
  - alias: studio Sera
    initial_state: true
    trigger:
      - platform: state
        entity_id: light.studio
        to: 'on'
    condition:
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
      - condition: time
        after: '18:00:00'
        before: '23:59:59'
    action:
      service: light.turn_on
      data:
        entity_id: light.studio
        brightness_pct: 10
        transition: 5

########## Luce Bagno Grande ##############
  - alias: bagno pir
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.fibaro_system_fgms001zw5_motion_sensor_sensor
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.sensor
          state: 'off'
          for: # solo se è stato spento nell'ultimo minuto il sensore dela camerina
            minutes: 1
        - condition: state
          entity_id: sun.sun
          state: "below_horizon"
    action:
      service: light.turn_on
      data:
        entity_id: light.level

  - alias: bagno sera
    initial_state: true
    trigger:
      - platform: state
        entity_id: light.level
        from: 'off'
        to: 'on'
    condition:
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
      - condition: time
        after: '18:00:00'
        before: '23:59:59'
    action:
      service: light.turn_on
      data:
        entity_id: light.level
        brightness_pct: 10

  - alias: bagno notte
    initial_state: true
    trigger:
      platform: state
      entity_id: light.level
      from: 'off'
      to: 'on'
    condition:
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
      - condition: time
        after: '00:00:01'
        before: '07:00:00'
    action:
      service: light.turn_on
      data:
        entity_id: light.level
        brightness_pct: 3

  - alias: bagno energy
    initial_state: true
    trigger:
      platform: state
      entity_id: binary_sensor.fibaro_system_fgms001zw5_motion_sensor_sensor
      to: 'off'
      for:
        minutes: 1
    action:
      service: light.turn_off
      data:
        entity_id: light.level

########## Luce Philips ######
  - alias: guardo la tv
    initial_state: true
    trigger:
      platform: state
      entity_id: media_player.lg_tv_remote
      to: 'playing'
    condition:
      condition: state
      entity_id: sun.sun
      state: "below_horizon"
    action:
      service: switch.turn_on
      entity_id: switch.switch_15
  - alias: Philips Energy
    initial_state: true
    trigger:
      platform: time
      at:  '1:00:00'
    condition:
      - condition: state
        entity_id: switch.switch_15
        state: 'on'
      - condition: state
        entity_id: media_player.lg_tv_remote
        state: 'off'
    action:
      service: switch.turn_off
      entity_id: switch.switch_15

########## Luce pensili ##############
  - alias: pensili pir
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.dafangindoor_motion_sensor
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: time
          after: '21:45:01'
          before: '06:00:00'
        - condition: template
          value_template: >
            {% if states.automation.pensili_pir.last_triggered is not none %}
              {% if as_timestamp(now()) | int - as_timestamp(states.automation.pensili_pir.attributes.last_triggered) | int > 180 %} true {% else %} false
              {% endif %}
            {% else %}
            false
            {% endif %}
        - condition: state
          entity_id: sun.sun
          state: "below_horizon"
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.shellypensili
      - delay: '00:03:00'
      - service: switch.turn_off
        data:
          entity_id: switch.shellypensili
############ Tutte le Luci #######

  - alias: risparmio energetico giorno
    initial_state: true
    trigger:
      platform: state
      entity_id: group.persone  # di default quando un membro del gruppo è a casa, il gruppo è a casa
      from: 'home'
      to: 'not_home'
      for:
        minutes: 10
    condition:
      - condition: state
        entity_id: sun.sun
        state: "above_horizon"
    action:
      service: homeassistant.turn_off
      entity_id: group.luci

############ Simulatore presenza  ######################
  - alias: assente
    initial_state: true
    trigger:
      platform: time_pattern
      minutes: '/1'
      seconds: 0
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ not is_state("device_tracker.davides_iphone", "home") and not is_state("device_tracker.iphone_di_muriel", "home") }}'
        - condition: sun
          after: sunset
          after_offset: "-00:25:00"
        - condition: state
          entity_id: switch.fibaro_system_fgs222_double_relay_switch_2x15kw_switch_2
          state: 'off'
    action:
      - service: homeassistant.turn_on
        entity_id: switch.fibaro_system_fgs222_double_relay_switch_2x15kw_switch_2

########################################################
############## AUTOMAZIONI DI SERVIZIO #################
########################################################
  - alias: start homekit
    initial_state: true
    trigger:
      - platform: event
        event_type: zwave.network_ready
      - platform: event
        event_type: zwave.network_complete
      - platform: event
        event_type: zwave.network_complete_some_dead
#      - platform: homeassistant
#        event: start
    action:
      - delay: '00:01:00'
      - service: homekit.start


  - alias: backup automatico
    initial_state: true
    trigger:
      platform: time
      at: '3:00:00'
    condition:
      - condition: time
        weekday:
          - mon
    action:
      - service: hassio.snapshot_full
        data_template:
          name: Automated Backup {{ now().strftime('%Y-%m-%d') }}
      - service: hassio.addon_stdin
        data:
          addon: 7be23ff5_dropbox_sync
          input:
            command: upload

########### NOTIFICHE ##########
  - alias: attiva notifica lavatrice
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: sensor.neo_coolcam_power_plug_12a_power_8
        above: '50'
    condition:
      - condition: state
        entity_id: automation.attiva_notifica_lavatrice
        state: 'off'
    action:
      - service: automation.turn_on
        entity_id: automation.notifica_fine_lavaggio
  - alias: notifica fine lavaggio
    initial_state: false
    trigger:
    - platform: numeric_state
      entity_id: sensor.neo_coolcam_power_plug_12a_power_8
      below: '3'
      for:
        minutes: 8
    action:
      - service: notify.ios_davides_iphone
        data:
          message: "La lavatrice ha completato il lavaggio"
      - service: notify.ios_iphone_di_muriel
        data:
          message: "Vedi che il marito NERD può essere utile ?!! La LAVATRICE è Pronta"
      - service: automation.turn_off
        entity_id: automation.notifica_fine_lavaggio

  - alias: attiva notifica asciugatrice
    initial_state: true
    trigger:
    - platform: numeric_state
      entity_id: sensor.neo_coolcam_power_plug_12a_power_11
      above: '50'
    action:
      - service: automation.turn_on
        entity_id: automation.notifica_asciugatrice
  - alias:  notifica asciugatrice
    initial_state: false
    trigger:
    - platform: numeric_state
      entity_id: sensor.neo_coolcam_power_plug_12a_power_11
      below: '3'
      for:
        minutes: 8
    action:
      - service: notify.telefoni
        data:
          message: "Asciugatrice pronta: vediamo di non farci marcire i vestiti dentro ... "
      - service: automation.turn_off
        entity_id: automation.notifica_asciugatrice

  - alias: notifica aggiornamento
    initial_state: true
    trigger:
    - platform: state
      entity_id: updater.updater
    action:
      service: notify.ios_davides_iphone
      data_template:
        message: "È disponibile Home Assistant {{ states.updater.updater.state }}."

  - alias: arrivabetty
    initial_state: True
    trigger:
      platform: state
      entity_id: device_tracker.suocera
      to: 'home'
    condition:
      - condition: template   # Solo una volta ogni 24 ore
        value_template: >
          {% if states.automation.arrivabetty.last_triggered is not none %}
          {% if as_timestamp(now()) | int - as_timestamp(states.automation.arrivabetty.attributes.last_triggered) | int > 86400 %} true {% else %} false
          {% endif %}
          {% else %}
          false
          {% endif %}
    action:
      - service: media_player.volume_set
        data:
          entity_id: media_player.living
          volume_level: 0.60
      - service: tts.google_say
        entity_id: media_player.living
        data:
          message: 'Chiudete a chiave il mobile dei liquori, nascondete gli oggetti che si rompono... salvate il salvabile. E buona fortuna la vecchia è arrivata '
          language: 'it'
      - service: notify.ios_davides_iphone
        data:
          message: " La vecchia pazza è alla porta.... SCAPPA ! "

  - alias: spazio libero
    initial_state: true
    trigger:
      platform: numeric_state
      entity_id: sensor.disk_use_percent
      above: 85
      below: 90
    action:
      - service: automation.turn_off
        data:
          entity_id: automation.backup_automatico
      - service: notify.ios_davides_iphone
        data:
          message: "Backup Automatico disattivato... Spazio libero sulla SD in esaurimento!"

  - alias: toner
    initial_state: true
    trigger:
      platform: numeric_state
      entity_id: sensor.samsung_m2020_series_1921681137_toner_black
      below: 10
    action:
      - service: notify.telefoni
        data:
          message: "È quasi finito il toner della stampante Samsung M2020, ricordati di comprarlo"


  - alias: test notifica
    initial_state: False
    trigger:
      platform: state
      entity_id: automation.test_notifica
      to: 'on'
    action:
      - service: notify.ios_davides_iphone
        data:
          message: "Test Notifica iOS"
      - service: script.irrigation_run_a_cycle
        data_template:
          cycle: 1

  - alias: messaggio giorno havvento  # La Notifica  dell'avvento è opera di Alberto https://github.com/JohnnyZeta/hassio
    trigger:
      - platform: time
        at: '12:00:00'
    action:
      - service: notify.telefoni
        data_template:
          title: >
            {% if is_state("sensor.giornianatale", "21") %} *21 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "20") %} *20 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "19") %} *19 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "18") %} *18 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "17") %} *17 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "16") %} *16 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "15") %} *15 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "14") %} *14 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "13") %} *13 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "12") %} *12 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "11") %} *11 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "10") %} *10 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "9") %} *9 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "8") %} *8 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "7") %} *Una settimana a Natale!*
            {% elif is_state("sensor.giornianatale", "6") %} *6 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "5") %} *5 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "4") %} *4 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "3") %} *3 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "2") %} *2 Giorni a Natale!*
            {% elif is_state("sensor.giornianatale", "1") %} *Buona Vigilia di Natale!*
            {% elif is_state("sensor.giornianatale", "0") %} *Buon Natale!*
            {% endif %}
          message: >
            {% if is_state("sensor.giornianatale", "21") %} A me piace prendere il Natale un po’ alla volta, per tutto l’anno. E perciò mi lascio trasportare fino ad arrivare alle vacanze: lascio che mi colgano di sorpresa, svegliandomi un bel giorno e dicendo improvvisamente a me stesso: *Caspita, questo è il giorno di Natale!* _Ray Stannard Baker_
            {% elif is_state("sensor.giornianatale", "20") %} Amo la neve per la stessa ragione per cui amo il Natale: *unisce le persone, mentre il tempo si ferma*. Le coppie che si tengono per mano serpeggiano pigramente per le strade e bambini tirano le slitte e si inseguono con le palle di neve. Nessuno sembra essere in corsa per sperimentare qualcosa di diverso dalla gloria del giorno. _Rachel Cohn_
            {% elif is_state("sensor.giornianatale", "19") %} A suo dire l’umanità si divideva in due grandi gruppi nemici fra loro: i _presepisti_ e gli _alberisti_. \"È una suddivisione – diceva lo zio – così importante che dovrebbe comparire sui documenti di identità, né più né meno di come appare il sesso e il gruppo sanguigno. Altrimenti può accadere che un disgraziato scopre, solo a matrimonio avvenuto, di essersi unito ad un essere umano di *tendenze natalizie diverse*.\" _Luciano De Crescenzo_
            {% elif is_state("sensor.giornianatale", "18") %} Alcuni suggerimenti per un regalo di Natale: *perdono* per un tuo nemico, *tolleranza* per un tuo avversario, il tuo *cuore* per un tuo amico, un *buon servizio* per un tuo cliente. *Carità* per tutti e *buon esempio* per i bambini. *Rispetto* per te stesso. _Oren Arnold_
            {% elif is_state("sensor.giornianatale", "17") %} Disponiamoci al Natale con *animo indulgente, affettuoso*. I nostri denti, che troppo spesso stridono di rabbia, abbiano pace almeno in questi giorni. _Fruttero e Lucentini_
            {% elif is_state("sensor.giornianatale", "16") %} È Natale da fine ottobre. Le lucette si accendono sempre prima, mentre le persone sono sempre più intermittenti. Io vorrei un dicembre a *luci spente* e con le *persone accese*. _Charles Bukowski_
            {% elif is_state("sensor.giornianatale", "15") %} Felice, felice Natale, che possa *riscattarci* dalle delusioni dei nostri giorni d’infanzia; che possa *ricordare* al vecchio i piaceri della sua gioventù; che possa *trasportare* il marinaio e il viaggiatore migliaia di miglia lontano, di ritorno al caminetto della sua casa tranquilla! _Charles Dickens_
            {% elif is_state("sensor.giornianatale", "14") %} Nel corso del nostro anno triste e razionale, sopravvive una sola festività tra le antiche e allegre ricorrenze un tempo diffuse in tutto il mondo. Il Natale continua a ricordarci le epoche, pagane o cristiane, in cui invece di *poche persone che scrivevano poesie*, ve ne erano *molte che le recitavano*. _Gilbert Keith Chesterton_
            {% elif is_state("sensor.giornianatale", "13") %} Vorrei poter mettere lo spirito del Natale all’interno di un *barattolo* e poterlo tirare fuori mese per mese, poco alla volta. _Harland Miller_
            {% elif is_state("sensor.giornianatale", "12") %} A Natale son tutti più buoni. E’ il *prima* e il *dopo* che mi preoccupa. _Lucy van Pelt (Peanuts)_
            {% elif is_state("sensor.giornianatale", "11") %} Non preoccuparti della dimensione del tuo albero di Natale. Agli occhi di un bambino sono tutti alti *10 metri*. _Larry Wilde_
            {% elif is_state("sensor.giornianatale", "10") %} Una volta mi limitavo a ringraziare Babbo Natale per pochi soldi e qualche biscotto. Ora, lo ringrazio per le *stelle* e le *facce in strada*, e il *vino* e il *grande mare*. _Gilbert Keith Chasterton_
            {% elif is_state("sensor.giornianatale", "9") %} Caro Babbo Natale, io vorrei che quest'anno per Natale tutti diventassero più buoni e io più *figa* (questo lo chiedo ogni anno però...). Se pensi che, anche per te che sei babbo, esaudire questo desiderio sia proprio una mission impossible, calami pure giù dalla canna fumaria un assegno da *5.000 euro* che me lo faccio bastare. _Luciana Littizzetto_
            {% elif is_state("sensor.giornianatale", "8") %} Il Natale dovrebbe essere legna che arde nel caminetto, *profumo* di pino e di vino, buone chiacchiere, bei ricordi e amicizie rinnovate. Ma se questo manca *basterà l’amore*. _Jesse O’Neill_
            {% elif is_state("sensor.giornianatale", "7") %} Se il Natale non esistesse già, l’uomo dovrebbe inventarlo. Ci deve essere almeno un giorno all’anno a ricordarci che stiamo su questa terra per qualcos’altro oltre che per la nostra *generale ostinazione!* _Eric Sevareid_
            {% elif is_state("sensor.giornianatale", "6") %} Eravamo così poveri che a Natale il mio vecchio usciva di casa, sparava un colpo di pistola in aria, poi rientrava in casa e diceva: spiacente ma Babbo Natale si è *suicidato*. _J. La Motta_
            {% elif is_state("sensor.giornianatale", "5") %} I nostri bambini aspettano i regali di Natale come i politici i risultati delle *elezioni*; mancano ancora i dati del seggio elettorale dello zio Fred e del distretto della zia Ruth. _Marceline Cox_
            {% elif is_state("sensor.giornianatale", "4") %} Per il settimo anno di seguito mia suocera è venuta da noi a Natale. Quest’anno abbiamo deciso di cambiare. *La faremo entrare*. _Les Dawson_
            {% elif is_state("sensor.giornianatale", "3") %} Il Natale? Natale significa mangiare, e mangiare significa morte! La morte significa carneficina; il Natale è una *carneficina*. _L’Oca Ferdinand in Babe_
            {% elif is_state("sensor.giornianatale", "2") %} Ho imparato che puoi capire molto di una persona dal modo il cui questa gestisce queste tre cose: *giornate piovose*, *bagaglio smarrito* e *luci di Natale ingarbugliate*. _Maya Angelou_
            {% elif is_state("sensor.giornianatale", "1") %} È la vigilia di Natale. Se è passato il tempo in cui accadevano miracoli, ci è rimasto almeno un giorno magico in cui *tutto può succedere*. _Jostein Gaarder_
            {% elif is_state("sensor.giornianatale", "0") %} Allora oggi è il *Santo Natale*, il gran varietà religioso comincerà alle ore 9 e 30. Il cappellano *Charlie* vi farà sapere come il mondo libero riuscirà a far fuori il comunismo. _Sergente Hartman (Full Metal Jacket)_
            {% endif %}


##################-----CONTROLLO CARICHI----##################################
#
#  alla fine l'ho messo in un packages per conto suo
#
